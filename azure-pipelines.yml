trigger:
- master

# Define the pool to specify the type of virtual machine to run the job
pool:
  vmImage: ubuntu-latest

# Define a strategy to test across multiple versions of Node.js
strategy:
  matrix:
    node_10:
      node_version: '10.x'
    node_12:
      node_version: '12.x'
    node_14:
      node_version: '14.x'

steps:
# Install different versions of Node.js based on the matrix strategy
- task: NodeTool@0
  inputs:
    versionSpec: $(node_version)
  displayName: 'Install Node.js $(node_version)'

# Cache npm dependencies to speed up builds
- task: Cache@2
  inputs:
    key: 'npm | "$(Agent.OS)" | package-lock.json'
    restoreKeys: |
      npm | "$(Agent.OS)"
    path: node_modules # Caching the node_modules directory
  displayName: 'Cache npm'

# Install npm dependencies
- script: npm install
  displayName: 'npm install'

# Run linting to catch stylistic errors and potential problems
- script: npm run lint
  displayName: 'Lint Code'

# Run tests to ensure code quality
- script: npm test
  displayName: 'npm test'

# Build the React application
- script: npm run build
  displayName: 'npm run build'

# Publish build artifacts for deployment or further stages
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'build'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Artifacts'

# Optional: Deploy the application (conditionally run this on the master branch)
# - script: npm run deploy
#   displayName: 'Deploy Application'
#   condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
